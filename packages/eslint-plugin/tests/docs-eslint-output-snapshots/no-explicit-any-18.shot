Options: { "ignoreRestArgs": false }

function foo1(...args: any[]): void {}
                       ~~~ Unexpected any. Specify a different type.
function foo2(...args: readonly any[]): void {}
                                ~~~ Unexpected any. Specify a different type.
function foo3(...args: Array<any>): void {}
                             ~~~ Unexpected any. Specify a different type.
function foo4(...args: ReadonlyArray<any>): void {}
                                     ~~~ Unexpected any. Specify a different type.

declare function bar(...args: any[]): void;
                              ~~~ Unexpected any. Specify a different type.

const baz = (...args: any[]) => {};
                      ~~~ Unexpected any. Specify a different type.
const qux = function (...args: any[]) {};
                               ~~~ Unexpected any. Specify a different type.

type Quux = (...args: any[]) => void;
                      ~~~ Unexpected any. Specify a different type.
type Quuz = new (...args: any[]) => void;
                          ~~~ Unexpected any. Specify a different type.

interface Grault {
  (...args: any[]): void;
            ~~~ Unexpected any. Specify a different type.
}
interface Corge {
  new (...args: any[]): void;
                ~~~ Unexpected any. Specify a different type.
}
interface Garply {
  f(...args: any[]): void;
             ~~~ Unexpected any. Specify a different type.
}
