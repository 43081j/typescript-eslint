Options: { "checkTypePredicates": true }

function assert(condition: unknown): asserts condition {
  if (!condition) {
    throw new Error('Condition is falsy');
  }
}

assert(false); // Unnecessary; condition is always falsy.
       ~~~~~ Unnecessary conditional, value is always falsy.

const neverNull = {};
assert(neverNull); // Unnecessary; condition is always truthy.
       ~~~~~~~~~ Unnecessary conditional, value is always truthy.

function isString(value: unknown): value is string {
  return typeof value === 'string';
}

declare const s: string;

// Unnecessary; s is always a string.
if (isString(s)) {
             ~ Unnecessary conditional, expression already has the type being checked by the type guard.
}

function assertIsString(value: unknown): asserts value is string {
  if (!isString(value)) {
    throw new Error('Value is not a string');
  }
}

assertIsString(s); // Unnecessary; s is always a string.
               ~ Unnecessary conditional, expression already has the type being checked by the assertion function.
